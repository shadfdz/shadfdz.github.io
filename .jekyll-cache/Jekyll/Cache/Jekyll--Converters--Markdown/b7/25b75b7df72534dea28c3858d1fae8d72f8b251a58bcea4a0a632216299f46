I"bE<h2 id="starting-a-data-science-project">Starting a Data Science Project</h2>

<p>Let’s start a data science project from scratch. In this series, we will analyze online customer intention (<a href="https://archive.ics.uci.edu/ml/datasets/Online+Shoppers+Purchasing+Intention+Dataset">source</a>) by following the <a href="https://www.ibm.com/docs/en/spss-modeler/SaaS?topic=dm-crisp-help-overview">CRISP-DM</a> data science lifecycle process. For part 1, we’re going to setup our project, understand our data, and perform exploratory data analysis. For part 2, we’re going to focus on data cleansing and feature engineering methods. Part 3 will involve modeling our data and Part 4 will be deployment of our model using Flask and Docker. Whew.</p>

<h2 id="setting-up-the-workspace">Setting Up the Workspace</h2>
<p>For the project structure, requirements, and setup, please checkout the project’s github <a href="https://github.com/shadfdz/crispy-octo-spoon">repository</a>. Go ahead checkout the readme for instructions on how to setup your virtual environment if you want to do so. We will also be using pre-commit hooks on our code.</p>

<h2 id="business-question">Business Question</h2>
<p>Before we start loading our data on Pandas and starting analysis, let’s first understand our business question and our data. The dataset was originally utilized by <a href="https://link.springer.com/article/10.1007/s00521-018-3523-0">Sakar et al</a> to propose a real-time online shopper behavior analysis system. The goal of the paper was to predict the purchasing intention of the customer and website abandonment likelihood. In this series, we will focus on the former and analyze and predict which behaviors of a customer will result to a higher likelihood of making a purchase.</p>

<h2 id="dataloading-and-understanding-the-data">Dataloading and Understanding the Data</h2>
<p>Let’s load our data on pandas while we understand it’s background further using related literature. There are 10 numerical and 8 categorical attributes. The “Revenue” attribute, which indicates if a visit resulted to a customer transaction, will be our indepednent variable.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'./dataset/online_shoppers_intention.csv'</span><span class="p">)</span>
</code></pre></div></div>

<p>The following tables are Table 1 and Table 2 of <a href="https://link.springer.com/article/10.1007/s00521-018-3523-0">Sakar et al</a>.</p>

<p><strong>Table 1:</strong> Numerical Attributes</p>

<hr />

<table>
  <thead>
    <tr>
      <th style="text-align: left">Attribute</th>
      <th style="text-align: center">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Adminsitrative</td>
      <td style="text-align: center">No. of pages visited by the visitor about account management</td>
    </tr>
    <tr>
      <td style="text-align: left">Administrative Duration</td>
      <td style="text-align: center">Amount of time in sec spent on administrative pages</td>
    </tr>
    <tr>
      <td style="text-align: left">Informational</td>
      <td style="text-align: center">No. of pages visited by vistor about web site, contect, and address info</td>
    </tr>
    <tr>
      <td style="text-align: left">Informational Duration</td>
      <td style="text-align: center">Amount of time in sec spent on informational pages</td>
    </tr>
    <tr>
      <td style="text-align: left">Product Related</td>
      <td style="text-align: center">No. of pages visited by vistor about product</td>
    </tr>
    <tr>
      <td style="text-align: left">Product Related Duration</td>
      <td style="text-align: center">Amount of time in sec spent on product pages</td>
    </tr>
    <tr>
      <td style="text-align: left">Bounce Rate</td>
      <td style="text-align: center">Average bounce rate value of pages visited by visitor</td>
    </tr>
    <tr>
      <td style="text-align: left">Exit Rate</td>
      <td style="text-align: center">Average exit rate value of the pages visited by visitor</td>
    </tr>
    <tr>
      <td style="text-align: left">Page Value</td>
      <td style="text-align: center">Average page value o the pages visited by visitor</td>
    </tr>
    <tr>
      <td style="text-align: left">Special Data</td>
      <td style="text-align: center">Closeness of site visting time to a spefial day</td>
    </tr>
  </tbody>
</table>

<hr />

<p><strong>Table 2:</strong> Categorical Attributes</p>

<hr />

<table>
  <thead>
    <tr>
      <th style="text-align: left">Attribute</th>
      <th style="text-align: center">Description</th>
      <th style="text-align: center">No. of Categories</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">OperatingSystems</td>
      <td style="text-align: center">Operating System of visitor</td>
      <td style="text-align: center">8</td>
    </tr>
    <tr>
      <td style="text-align: left">Browser</td>
      <td style="text-align: center">Browser</td>
      <td style="text-align: center">13</td>
    </tr>
    <tr>
      <td style="text-align: left">Region</td>
      <td style="text-align: center">Georgraphic loctation of the visitor</td>
      <td style="text-align: center">9</td>
    </tr>
    <tr>
      <td style="text-align: left">Traffic Type</td>
      <td style="text-align: center">Traffic source by which the visitor arrived</td>
      <td style="text-align: center">20</td>
    </tr>
    <tr>
      <td style="text-align: left">Visitor Type</td>
      <td style="text-align: center">“New Visitor”, “Returning Visitor”, “Other”</td>
      <td style="text-align: center">3</td>
    </tr>
    <tr>
      <td style="text-align: left">Weekend</td>
      <td style="text-align: center">boolean value if visit was made on a weekend</td>
      <td style="text-align: center">2</td>
    </tr>
    <tr>
      <td style="text-align: left">Month</td>
      <td style="text-align: center">Month</td>
      <td style="text-align: center">12</td>
    </tr>
    <tr>
      <td style="text-align: left">Revenue</td>
      <td style="text-align: center">Indicates if visit ended with a transaction</td>
      <td style="text-align: center">2</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="the-data">The Data</h2>

<p>Now let’s look at the shape of our data and it’s attributes.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span>

<span class="c1"># shape
</span><span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="c1"># show data types
</span><span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">dtypes</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(12330, 18)

[5 rows x 18 columns]
Administrative               int64
Administrative_Duration    float64
Informational                int64
Informational_Duration     float64
ProductRelated               int64
ProductRelated_Duration    float64
BounceRates                float64
ExitRates                  float64
PageValues                 float64
SpecialDay                 float64
Month                       object
OperatingSystems             int64
Browser                      int64
Region                       int64
TrafficType                  int64
VisitorType                 object
Weekend                       bool
Revenue                       bool
</code></pre></div></div>

<p>We can see that some of our categorical variables are numeric. This could be useful since we can look at the descrptive statistics of the data. The describe function by accpets both object and numeric data types but having both makes the output unreadable so we’re going to separate the two.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># descriptive stats
</span><span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">describe</span><span class="p">().</span><span class="n">T</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">describe</span><span class="p">(</span><span class="n">include</span><span class="o">=</span><span class="p">[</span><span class="s">'object'</span><span class="p">,</span><span class="s">'bool'</span><span class="p">]).</span><span class="n">T</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                           <span class="n">count</span>         <span class="n">mean</span>          <span class="n">std</span>  <span class="nb">min</span>         <span class="mi">25</span><span class="o">%</span>         <span class="mi">50</span><span class="o">%</span>          <span class="mi">75</span><span class="o">%</span>           <span class="nb">max</span>
<span class="n">Administrative</span>           <span class="mf">12330.0</span>     <span class="mf">2.315166</span>     <span class="mf">3.321784</span>  <span class="mf">0.0</span>    <span class="mf">0.000000</span>    <span class="mf">1.000000</span>     <span class="mf">4.000000</span>     <span class="mf">27.000000</span>
<span class="n">Administrative_Duration</span>  <span class="mf">12330.0</span>    <span class="mf">80.818611</span>   <span class="mf">176.779107</span>  <span class="mf">0.0</span>    <span class="mf">0.000000</span>    <span class="mf">7.500000</span>    <span class="mf">93.256250</span>   <span class="mf">3398.750000</span>
<span class="n">Informational</span>            <span class="mf">12330.0</span>     <span class="mf">0.503569</span>     <span class="mf">1.270156</span>  <span class="mf">0.0</span>    <span class="mf">0.000000</span>    <span class="mf">0.000000</span>     <span class="mf">0.000000</span>     <span class="mf">24.000000</span>
<span class="n">Informational_Duration</span>   <span class="mf">12330.0</span>    <span class="mf">34.472398</span>   <span class="mf">140.749294</span>  <span class="mf">0.0</span>    <span class="mf">0.000000</span>    <span class="mf">0.000000</span>     <span class="mf">0.000000</span>   <span class="mf">2549.375000</span>
<span class="n">ProductRelated</span>           <span class="mf">12330.0</span>    <span class="mf">31.731468</span>    <span class="mf">44.475503</span>  <span class="mf">0.0</span>    <span class="mf">7.000000</span>   <span class="mf">18.000000</span>    <span class="mf">38.000000</span>    <span class="mf">705.000000</span>
<span class="n">ProductRelated_Duration</span>  <span class="mf">12330.0</span>  <span class="mf">1194.746220</span>  <span class="mf">1913.669288</span>  <span class="mf">0.0</span>  <span class="mf">184.137500</span>  <span class="mf">598.936905</span>  <span class="mf">1464.157214</span>  <span class="mf">63973.522230</span>
<span class="n">BounceRates</span>              <span class="mf">12330.0</span>     <span class="mf">0.022191</span>     <span class="mf">0.048488</span>  <span class="mf">0.0</span>    <span class="mf">0.000000</span>    <span class="mf">0.003112</span>     <span class="mf">0.016813</span>      <span class="mf">0.200000</span>
<span class="n">ExitRates</span>                <span class="mf">12330.0</span>     <span class="mf">0.043073</span>     <span class="mf">0.048597</span>  <span class="mf">0.0</span>    <span class="mf">0.014286</span>    <span class="mf">0.025156</span>     <span class="mf">0.050000</span>      <span class="mf">0.200000</span>
<span class="n">PageValues</span>               <span class="mf">12330.0</span>     <span class="mf">5.889258</span>    <span class="mf">18.568437</span>  <span class="mf">0.0</span>    <span class="mf">0.000000</span>    <span class="mf">0.000000</span>     <span class="mf">0.000000</span>    <span class="mf">361.763742</span>
<span class="n">SpecialDay</span>               <span class="mf">12330.0</span>     <span class="mf">0.061427</span>     <span class="mf">0.198917</span>  <span class="mf">0.0</span>    <span class="mf">0.000000</span>    <span class="mf">0.000000</span>     <span class="mf">0.000000</span>      <span class="mf">1.000000</span>
<span class="n">OperatingSystems</span>         <span class="mf">12330.0</span>     <span class="mf">2.124006</span>     <span class="mf">0.911325</span>  <span class="mf">1.0</span>    <span class="mf">2.000000</span>    <span class="mf">2.000000</span>     <span class="mf">3.000000</span>      <span class="mf">8.000000</span>
<span class="n">Browser</span>                  <span class="mf">12330.0</span>     <span class="mf">2.357097</span>     <span class="mf">1.717277</span>  <span class="mf">1.0</span>    <span class="mf">2.000000</span>    <span class="mf">2.000000</span>     <span class="mf">2.000000</span>     <span class="mf">13.000000</span>
<span class="n">Region</span>                   <span class="mf">12330.0</span>     <span class="mf">3.147364</span>     <span class="mf">2.401591</span>  <span class="mf">1.0</span>    <span class="mf">1.000000</span>    <span class="mf">3.000000</span>     <span class="mf">4.000000</span>      <span class="mf">9.000000</span>
<span class="n">TrafficType</span>              <span class="mf">12330.0</span>     <span class="mf">4.069586</span>     <span class="mf">4.025169</span>  <span class="mf">1.0</span>    <span class="mf">2.000000</span>    <span class="mf">2.000000</span>     <span class="mf">4.000000</span>     <span class="mf">20.000000</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>             <span class="n">count</span> <span class="n">unique</span>                <span class="n">top</span>   <span class="n">freq</span>
<span class="n">Month</span>        <span class="mi">12330</span>     <span class="mi">10</span>                <span class="n">May</span>   <span class="mi">3364</span>
<span class="n">VisitorType</span>  <span class="mi">12330</span>      <span class="mi">3</span>  <span class="n">Returning_Visitor</span>  <span class="mi">10551</span>
<span class="n">Weekend</span>      <span class="mi">12330</span>      <span class="mi">2</span>              <span class="bp">False</span>   <span class="mi">9462</span>
<span class="n">Revenue</span>      <span class="mi">12330</span>      <span class="mi">2</span>              <span class="bp">False</span>  <span class="mi">10422</span>
</code></pre></div></div>

<p>We can see that there is an apperent skewness in the distribution of some of variables especially the duration times. For example, Administrative_Duration has a mean of 80.8 seconds with a median (50% percentile) at 7.5 seconds. There is also a difference in the scale of each variable such as the bounce and exit rates versus duration times. Our outcome of interest “Revenue” also has an uneven distribution with almost 80% of the data being of the negative class. We can also check for skewness using the skew function. First let’s separate our predictors to continuous and categorical variables in two separate lists.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># spit our variables according to type
</span>    <span class="n">categorical_var</span> <span class="o">=</span> <span class="p">[</span><span class="s">'SpecialDay'</span><span class="p">,</span><span class="s">'Month'</span><span class="p">,</span><span class="s">'OperatingSystems'</span><span class="p">,</span>
    <span class="s">'Browser'</span><span class="p">,</span><span class="s">'Region'</span><span class="p">,</span><span class="s">'TrafficType'</span><span class="p">,</span><span class="s">'VisitorType'</span><span class="p">,</span><span class="s">'Revenue'</span><span class="p">,</span><span class="s">'Weekend'</span><span class="p">]</span>

    <span class="n">continuous_var</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[:,</span><span class="o">~</span><span class="n">df</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="n">isin</span><span class="p">(</span><span class="n">categorical_var</span><span class="p">)].</span><span class="n">columns</span>

    <span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">continuous_var</span><span class="p">].</span><span class="n">skew</span><span class="p">())</span>
</code></pre></div></div>

<p>Let’s visualize the data further to see the distributions.</p>

<h2 id="lets-visualize-our-data">Let’s Visualize Our Data</h2>

<p>For this project, we will be using plotly to visualize our data. Let’s go ahead and start plotting our numerical variables with “Revenue” as our categorical response.</p>

<iframe src="/img/posts/ocsi_part1/binnedwin_losebySP_tb_pt.html" height="800px" width="100%"></iframe>

<h5 id="acknowledgements">Acknowledgements</h5>
<p>Sakar, C.O., Polat, S.O., Katircioglu, M. et al. Neural Comput &amp; Applic (2018).</p>

:ET